{
	"root": true,

	"extends": "@ljharb",

	"globals": {
		"Uint8Array": false,
		"Float64Array": false,
	},

	"rules": {
		"complexity": "off",
		"id-length": "off",
		"max-lines-per-function": "off",
		"max-statements": "off",
		"multiline-comment-style": "off",
		"new-cap": ["error", {
			"capIsNewExceptions": [
				"FromBase64",
				"FromHex",
				"DetachArrayBuffer",
				"Get",
				"GetIntrinsic",
				"GetOptionsObject",
				"GetUint8ArrayBytes",
				"IsTypedArrayOutOfBounds",
				"MakeTypedArrayWithBufferWitnessRecord",
				"NumberToString",
				"SetUint8ArrayBytes",
				"SetValueInBuffer",
				"StringPad",
				"TypedArrayLength",
				"ValidateUint8Array",
			],
		}],
		"sort-keys": "off",
	},

	"overrides": [
		{
			"files": "Uint8Array.prototype.toBase64/implementation.js",
			"rules": {
				"operator-linebreak": ["error", "before"],
			},
		},
		{
			"files": "./aos/FromBase64.js",
			"rules": {
				"max-depth": "off",
			},
		},
		{
			"files": "./aos/DecodeBase64Chunk.js",
			"rules": {
				"no-param-reassign": "off",
				"operator-linebreak": ["error", "before"],
			},
		},
		{
			"files": "./aos/**/*.js",
			"rules": {
				"new-cap": ["error", {
					"capIsNewExceptions": [
						"ArrayBufferByteLength",
						"DecodeBase64Chunk",
						"GetIntrinsic",
						"GetValueFromBuffer",
						"IsDetachedBuffer",
						"IsFixedLengthArrayBuffer",
						"IsResizableArrayBuffer",
						"IsTypedArrayOutOfBounds",
						"MakeTypedArrayWithBufferWitnessRecord",
						"OrdinaryObjectCreate",
						"SetValueInBuffer",
						"SkipAsciiWhitespace",
						"Type",
						"TypedArrayElementSize",
						"TypedArrayLength",
						"ValidateUint8Array",
					],
				}],
			},
		},
	],
}
